{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/svelte-dnd-action/src/helpers/intersection.js","../../node_modules/svelte-dnd-action/src/helpers/listUtil.js","../../node_modules/svelte-dnd-action/src/helpers/dispatcher.js","../../node_modules/svelte-dnd-action/src/helpers/scroller.js","../../node_modules/svelte-dnd-action/src/helpers/util.js","../../node_modules/svelte-dnd-action/src/helpers/observer.js","../../node_modules/svelte-dnd-action/src/helpers/windowScroller.js","../../node_modules/svelte-dnd-action/src/helpers/styler.js","../../node_modules/svelte-dnd-action/src/action.js","../../src/Routine.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.28.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\n * Gets the absolute bounding rect (accounts for the window's scroll position)\n * @param {HTMLElement }el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getAbsoluteRect(el) {\n    const rect = el.getBoundingClientRect();\n    return ({\n        top: rect.top + window.scrollY,\n        bottom: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n        right: rect.right + window.scrollX\n    });\n}\n\n/**\n * finds the center :)\n * @typedef {Object} Rect\n * @property {number} top\n * @property {number} bottom\n * @property {number} left\n * @property {number} right\n * @param {Rect} rect\n * @return {{x: number, y: number}}\n */\nexport function findCenter(rect) {\n    return ({\n        x: (rect.left + rect.right) /2,\n        y: (rect.top + rect.bottom) /2\n    });    \n}\n\n/**\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number}\n */\nfunction calcDistance(pointA, pointB) {\n    return Math.sqrt(Math.pow(pointA.x - pointB.x, 2) +  Math.pow(pointA.y - pointB.y, 2));\n}\n\n/**\n * @param {Point} point\n * @param {Rect} rect\n * @return {boolean|boolean}\n */\nfunction isPointInsideRect(point, rect) {\n    return (\n        (point.y <= rect.bottom && point.y >= rect.top)\n        &&\n        (point.x >= rect.left && point.x <= rect.right)\n    );\n}\n\n/**\n * find the absolute coordinates of the center of a dom element\n * @param el {HTMLElement}\n * @returns {{x: number, y: number}}\n */\nexport function findCenterOfElement(el) {\n    return findCenter( getAbsoluteRect(el));\n}\n\n/**\n * @param {HTMLElement} elA\n * @param {HTMLElement} elB\n * @return {boolean}\n */\nexport function isCenterOfAInsideB(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const rectOfB = getAbsoluteRect(elB);\n    return isPointInsideRect(centerOfA, rectOfB);\n}\n\n/**\n * @param {HTMLElement|ChildNode} elA\n * @param {HTMLElement|ChildNode} elB\n * @return {number}\n */\nexport function calcDistanceBetweenCenters(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const centerOfB = findCenterOfElement(elB);\n    return calcDistance(centerOfA, centerOfB);\n}\n\n/**\n * @param {HTMLElement} el - the element to check\n * @returns {boolean} - true if the element in its entirety is off screen including the scrollable area (the normal dom events look at the mouse rather than the element)\n */\nexport function isElementOffDocument(el) {\n    const rect = getAbsoluteRect(el);\n    return rect.right < 0 || rect.left > document.documentElement.scrollWidth || rect.bottom < 0 || rect.top > document.documentElement.scrollHeight;\n}\n\n/**\n * If the point is inside the element returns its distances from the sides, otherwise returns null\n * @param {Point} point\n * @param {HTMLElement} el\n * @return {null|{top: number, left: number, bottom: number, right: number}}\n */\nexport function calcInnerDistancesBetweenPointAndSidesOfElement(point, el) {\n    const rect = getAbsoluteRect(el);\n    if (!isPointInsideRect(point, rect)) {\n        return null;\n    }\n    return {\n        top: point.y - rect.top,\n        bottom: rect.bottom - point.y,\n        left: point.x - rect.left,\n        // TODO - figure out what is so special about right (why the rect is too big)\n        right: Math.min(rect.right, document.documentElement.clientWidth) - point.x\n    }\n}","import { isCenterOfAInsideB, calcDistanceBetweenCenters } from './intersection';\n\n/**\n * @typedef {Object} Index\n * @property {number} index - the would be index\n * @property {boolean} isProximityBased - false if the element is actually over the index, true if it is not over it but this index is the closest\n */\n/**\n * Find the index for the dragged element in the list it is dragged over\n * @param {HTMLElement} floatingAboveEl \n * @param {HTMLElement} collectionBelowEl \n * @returns {Index|null} -  if the element is over the container the Index object otherwise null\n */\nexport function findWouldBeIndex(floatingAboveEl, collectionBelowEl) {\n    if (!isCenterOfAInsideB(floatingAboveEl, collectionBelowEl)) {\n        return null;\n    }\n    const children = collectionBelowEl.children;\n    // the container is empty, floating element should be the first \n    if (children.length === 0) {\n        return {index: 0, isProximityBased: true};\n    }\n    // the search could be more efficient but keeping it simple for now\n    // a possible improvement: pass in the lastIndex it was found in and check there first, then expand from there\n    for (let i=0; i< children.length; i++) {\n        if (isCenterOfAInsideB(floatingAboveEl, children[i])) {\n            return {index: i, isProximityBased: false};\n        }\n    }\n    // this can happen if there is space around the children so the floating element has \n    //entered the container but not any of the children, in this case we will find the nearest child\n    let minDistanceSoFar = Number.MAX_VALUE;\n    let indexOfMin = undefined;\n    // we are checking all of them because we don't know whether we are dealing with a horizontal or vertical container and where the floating element entered from\n    for (let i=0; i< children.length; i++) {\n        const distance = calcDistanceBetweenCenters(floatingAboveEl, children[i]);\n        if (distance < minDistanceSoFar) {\n            minDistanceSoFar = distance;\n            indexOfMin = i;\n        }\n    }\n    return {index: indexOfMin, isProximityBased: true};\n}","// external events\nconst FINALIZE_EVENT_NAME = 'finalize';\nconst CONSIDER_EVENT_NAME = 'consider';\n\n/**\n * @typedef {Object} Info\n * @property {string} trigger\n * @property {string} id\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchFinalizeEvent(el, items, info) {\n    el.dispatchEvent(new CustomEvent(FINALIZE_EVENT_NAME, {\n        detail: {items, info}\n    }));\n}\n\n/**\n * Dispatches a consider event\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchConsiderEvent(el, items, info) {\n    el.dispatchEvent(new CustomEvent(CONSIDER_EVENT_NAME, {\n        detail: {items, info}\n    }));\n}\n\n// internal events\nexport const DRAGGED_ENTERED_EVENT_NAME = 'draggedEntered';\nexport const DRAGGED_LEFT_EVENT_NAME = 'draggedLeft';\nexport const DRAGGED_OVER_INDEX_EVENT_NAME = 'draggedOverIndex';\nexport const DRAGGED_LEFT_DOCUMENT_EVENT_NAME = 'draggedLeftDocument';\nexport function dispatchDraggedElementEnteredContainer(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(new CustomEvent(DRAGGED_ENTERED_EVENT_NAME, {\n        detail: {indexObj, draggedEl}\n    }));\n}\nexport function dispatchDraggedElementLeftContainer(containerEl, draggedEl) {\n    containerEl.dispatchEvent(new CustomEvent(DRAGGED_LEFT_EVENT_NAME, {\n        detail: {draggedEl}\n    }));\n}\nexport function dispatchDraggedElementIsOverIndex(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(new CustomEvent(DRAGGED_OVER_INDEX_EVENT_NAME, {\n        detail: {indexObj, draggedEl}\n    }));\n}\nexport function dispatchDraggedLeftDocument(draggedEl) {\n    window.dispatchEvent(new CustomEvent(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, {\n        detail: { draggedEl}\n    }));\n}\n","import {\n    calcInnerDistancesBetweenPointAndSidesOfElement,\n} from \"./intersection\";\nconst SCROLL_ZONE_PX = 25;\n\nexport function makeScroller() {\n    let scrollingInfo;\n    function resetScrolling() {\n        scrollingInfo = {directionObj: undefined, stepPx: 0};\n    }\n    resetScrolling();\n    // directionObj {x: 0|1|-1, y:0|1|-1} - 1 means down in y and right in x\n    function scrollContainer(containerEl) {\n        const {directionObj, stepPx} = scrollingInfo;\n        if(directionObj) {\n            containerEl.scrollBy(directionObj.x * stepPx, directionObj.y * stepPx);\n            window.requestAnimationFrame(() => scrollContainer(containerEl));\n        }\n    }\n    function calcScrollStepPx(distancePx) {\n        return SCROLL_ZONE_PX - distancePx;\n    }\n\n    /**\n     * If the pointer is next to the sides of the element to scroll, will trigger scrolling\n     * Can be called repeatedly with updated pointer and elementToScroll values without issues\n     * @return {boolean} - true if scrolling was needed\n     */\n    function scrollIfNeeded(pointer, elementToScroll) {\n        if (!elementToScroll) {\n            return false;\n        }\n        const distances = calcInnerDistancesBetweenPointAndSidesOfElement(pointer, elementToScroll);\n        if (distances === null) {\n            resetScrolling();\n            return false;\n        }\n        const isAlreadyScrolling = !!scrollingInfo.directionObj;\n        let [scrollingVertically, scrollingHorizontally] = [false, false];\n        // vertical\n        if (elementToScroll.scrollHeight > elementToScroll.clientHeight) {\n            if (distances.bottom < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x:0, y:1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.bottom);\n            } else if (distances.top < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x:0, y:-1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.top);\n            }\n            if (!isAlreadyScrolling && scrollingVertically) {\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        // horizontal\n        if (elementToScroll.scrollWidth > elementToScroll.clientWidth) {\n            if (distances.right < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x:1, y:0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.right);\n            } else if (distances.left < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x:-1, y:0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.left);\n            }\n            if (!isAlreadyScrolling && scrollingHorizontally){\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        resetScrolling();\n        return false;\n    }\n\n    return ({\n        scrollIfNeeded,\n        resetScrolling\n    });\n}","/**\n * @param {Object} object\n * @return {string}\n */\nexport function toString(object) {\n    return JSON.stringify(object, null, 2);\n}\n\n/**\n * Finds the depth of the given node in the DOM tree\n * @param {HTMLElement} node\n * @return {number} - the depth of the node\n */\nexport function getDepth(node){\n    if (!node) {\n        throw new Error(\"cannot get depth of a falsy node\");\n    }\n    return _getDepth(node, 0);\n}\nfunction _getDepth(node, countSoFar = 0) {\n    if (!node.parentElement) {\n        return countSoFar - 1;\n    }\n    return _getDepth(node.parentElement, countSoFar + 1);\n}\n\n/**\n * A simple util to shallow compare objects quickly, it doesn't validate the arguments so pass objects in\n * @param {Object} objA\n * @param {Object} objB\n * @return {boolean} - true if objA and objB are shallow equal\n */\nexport function areObjectsShallowEqual(objA, objB) {\n    if (Object.keys(objA).length !== Object.keys(objB).length) {\n        return false;\n    }\n    for (const keyA in objA) {\n        if(!objB.hasOwnProperty(keyA) || objB[keyA] !== objA[keyA]) {\n            return false;\n        }\n    }\n    return true;\n}","import {findWouldBeIndex} from './listUtil';\nimport {findCenterOfElement, isElementOffDocument} from \"./intersection\";\nimport {dispatchDraggedElementEnteredContainer, \n        dispatchDraggedElementLeftContainer,\n        dispatchDraggedLeftDocument,\n        dispatchDraggedElementIsOverIndex} \n    from './dispatcher';\nimport {makeScroller} from \"./scroller\";\nimport { getDepth } from \"./util\";\n\nconst INTERVAL_MS = 200;\nconst TOLERANCE_PX = 10;\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\n\n/**\n * Tracks the dragged elements and performs the side effects when it is dragged over a drop zone (basically dispatching custom-events scrolling)\n * @param {Set<HTMLElement>} dropZones \n * @param {HTMLElement} draggedEl \n * @param {number} [intervalMs = INTERVAL_MS]\n */\nexport function observe(draggedEl, dropZones, intervalMs = INTERVAL_MS) {\n    // initialization\n    let lastDropZoneFound;\n    let lastIndexFound;\n    let lastIsDraggedInADropZone = false;\n    let lastCentrePositionOfDragged;\n    // We are sorting to make sure that in case of nested zones of the same type the one \"on top\" is considered first\n    const dropZonesFromDeepToShallow = Array.from(dropZones).sort((dz1, dz2) => getDepth(dz2) - getDepth(dz1));\n\n    /**\n     * The main function in this module. Tracks where everything is/ should be a take the actions\n     */\n    function andNow() {\n        const currentCenterOfDragged = findCenterOfElement(draggedEl);\n        const scrolled = scrollIfNeeded(currentCenterOfDragged, lastDropZoneFound);\n        // we only want to make a new decision after the element was moved a bit to prevent flickering\n        if (!scrolled && lastCentrePositionOfDragged &&\n            Math.abs(lastCentrePositionOfDragged.x - currentCenterOfDragged.x) < TOLERANCE_PX &&\n            Math.abs(lastCentrePositionOfDragged.y - currentCenterOfDragged.y) < TOLERANCE_PX ) {\n            next = window.setTimeout(andNow, intervalMs);\n            return;\n        }\n        if (isElementOffDocument(draggedEl)) {\n            console.debug(\"off document\");\n            dispatchDraggedLeftDocument(draggedEl);\n            return;\n        }\n\n        lastCentrePositionOfDragged = currentCenterOfDragged;\n        // this is a simple algorithm, potential improvement: first look at lastDropZoneFound\n        let isDraggedInADropZone = false\n        for (const dz of dropZonesFromDeepToShallow) {\n            const indexObj = findWouldBeIndex(draggedEl, dz);\n            if (indexObj === null) {\n               // it is not inside\n               continue;     \n            }\n            const {index} = indexObj;\n            isDraggedInADropZone = true;\n            // the element is over a container\n            if (dz !== lastDropZoneFound) {\n                lastDropZoneFound && dispatchDraggedElementLeftContainer(lastDropZoneFound, draggedEl);\n                dispatchDraggedElementEnteredContainer(dz, indexObj, draggedEl);\n                lastDropZoneFound = dz;\n                lastIndexFound = index;\n            }\n            else if (index !== lastIndexFound) {\n                dispatchDraggedElementIsOverIndex(dz, indexObj, draggedEl);\n                lastIndexFound = index;\n            }\n            // we handle looping with the 'continue' statement above\n            break;\n        }\n        // the first time the dragged element is not in any dropzone we need to notify the last dropzone it was in\n        if (!isDraggedInADropZone && lastIsDraggedInADropZone && lastDropZoneFound) {\n            dispatchDraggedElementLeftContainer(lastDropZoneFound, draggedEl);\n            lastDropZoneFound = undefined;\n            lastIndexFound = undefined;\n            lastIsDraggedInADropZone = false;\n        } else {\n            lastIsDraggedInADropZone = true;\n        }\n        next = window.setTimeout(andNow, intervalMs);\n    }\n    andNow();\n}\n\n// assumption - we can only observe one dragged element at a time, this could be changed in the future\nexport function unobserve() {\n    console.debug(\"unobserving\");\n    clearTimeout(next);\n    resetScrolling();\n}","import {makeScroller} from \"./scroller\";\n\nconst INTERVAL_MS = 300;\nlet mousePosition;\n\n/**\n * Do not use this! it is visible for testing only until we get over the issue Cypress not triggering the mousemove listeners\n * // TODO - make private (remove export)\n * @param {{clientX: number, clientY: number}} e\n */\nexport function updateMousePosition(e) {\n    const c = e.touches? e.touches[0] : e;\n    mousePosition = {x: c.clientX, y: c.clientY};\n}\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\nfunction loop() {\n    if (mousePosition) {\n        scrollIfNeeded(mousePosition, document.documentElement);\n    }\n    next = window.setTimeout(loop, INTERVAL_MS);\n}\n\n/**\n * will start watching the mouse pointer and scroll the window if it goes next to the edges\n */\nexport function armWindowScroller() {\n    console.debug('arming window scroller');\n    window.addEventListener('mousemove', updateMousePosition);\n    window.addEventListener('touchmove', updateMousePosition);\n    loop();\n}\n\n/**\n * will stop watching the mouse pointer and won't scroll the window anymore\n */\nexport function disarmWindowScroller() {\n    console.debug('disarming window scroller');\n    window.removeEventListener('mousemove', updateMousePosition);\n    window.removeEventListener('touchmove', updateMousePosition);\n    mousePosition = undefined;\n    window.clearTimeout(next);\n    resetScrolling();\n}","const TRANSITION_DURATION_SECONDS = 0.2;\n\n/**\n * private helper function - creates a transition string for a property\n * @param {string} property\n * @return {string} - the transition string\n */\nfunction trs(property) {\n    return `${property} ${TRANSITION_DURATION_SECONDS}s ease`;\n}\n/**\n * clones the given element and applies proper styles and transitions to the dragged element\n * @param {HTMLElement} originalElement\n * @return {Node} - the cloned, styled element\n */\nexport function createDraggedElementFrom(originalElement) {\n    const rect = originalElement.getBoundingClientRect();\n    const draggedEl = originalElement.cloneNode(true);\n    copyStylesFromTo(originalElement, draggedEl);\n    draggedEl.id = `svelte-dnd-action-dragged-el`;\n    draggedEl.name = `svelte-dnd-action-dragged-el`;\n    draggedEl.style.position = \"fixed\";\n    draggedEl.style.top = `${rect.top}px`;\n    draggedEl.style.left = `${rect.left}px`;\n    draggedEl.style.margin = '0';\n    // we can't have relative or automatic height and width or it will break the illusion\n    draggedEl.style.boxSizing = 'border-box';\n    draggedEl.style.height = `${rect.height}px`;\n    draggedEl.style.width = `${rect.width}px`;\n    draggedEl.style.transition = `${trs('width')}, ${trs('height')}, ${trs('background-color')}, ${trs('opacity')}, ${trs('color')} `;\n    // this is a workaround for a strange browser bug that causes the right border to disappear when all the transitions are added at the same time\n    window.setTimeout(() => draggedEl.style.transition +=`, ${trs('top')}, ${trs('left')}`,0);\n    draggedEl.style.zIndex = '9999';\n    draggedEl.style.cursor = 'grabbing';\n\n    return draggedEl;\n}\n\n/**\n * styles the dragged element to a 'dropped' state\n * @param {HTMLElement} draggedEl\n */\nexport function moveDraggedElementToWasDroppedState(draggedEl) {\n    draggedEl.style.cursor = 'grab';\n}\n\n/**\n * Morphs the dragged element style, maintains the mouse pointer within the element\n * @param {HTMLElement} draggedEl\n * @param {HTMLElement} copyFromEl - the element the dragged element should look like, typically the shadow element\n * @param {number} currentMouseX\n * @param {number} currentMouseY\n * @param {function} transformDraggedElement - function to transform the dragged element, does nothing by default.\n */\nexport function morphDraggedElementToBeLike(draggedEl, copyFromEl, currentMouseX, currentMouseY, transformDraggedElement) {\n    const newRect = copyFromEl.getBoundingClientRect();\n    const draggedElRect = draggedEl.getBoundingClientRect();\n    const widthChange = newRect.width - draggedElRect.width;\n    const heightChange = newRect.height - draggedElRect.height;\n    if (widthChange || heightChange) {\n        const relativeDistanceOfMousePointerFromDraggedSides = {\n            left: (currentMouseX - draggedElRect.left) / draggedElRect.width,\n            top: (currentMouseY - draggedElRect.top) / draggedElRect.height\n        };\n        draggedEl.style.height = `${newRect.height}px`;\n        draggedEl.style.width = `${newRect.width}px`;\n        draggedEl.style.left = `${parseFloat(draggedEl.style.left) - relativeDistanceOfMousePointerFromDraggedSides.left * widthChange}px`;\n        draggedEl.style.top = `${parseFloat(draggedEl.style.top) - relativeDistanceOfMousePointerFromDraggedSides.top * heightChange}px`;\n    }\n\n    /// other properties\n    copyStylesFromTo(copyFromEl, draggedEl);\n    transformDraggedElement();\n}\n\n/**\n *\n * @param {HTMLElement} copyFromEl\n * @param {HTMLElement} copyToEl\n */\nfunction copyStylesFromTo(copyFromEl, copyToEl) {\n    const computedStyle = window.getComputedStyle(copyFromEl);\n    Array.from(computedStyle)\n        .filter(s => s.startsWith('background') || s.startsWith('padding') || s.startsWith('font') || s.startsWith('text') || s.startsWith('align') ||\n            s.startsWith('justify') || s.startsWith('display') || s.startsWith('flex') || s.startsWith('border') || s === 'opacity' || s === 'color')\n        .forEach(s =>\n            copyToEl.style.setProperty(s, computedStyle.getPropertyValue(s), computedStyle.getPropertyPriority(s))\n        );\n}\n\n/**\n * makes the element compatible with being draggable\n * @param {HTMLElement} draggableEl\n * @param {boolean} dragDisabled\n */\nexport function styleDraggable(draggableEl, dragDisabled) {\n    draggableEl.draggable = false;\n    draggableEl.ondragstart = () => false;\n    if (!dragDisabled) {\n        draggableEl.style.userSelect = 'none';\n        draggableEl.style.cursor = 'grab';\n    }\n    else {\n        draggableEl.style.userSelect = '';\n        draggableEl.style.cursor = '';\n    }\n}\n\n/**\n * Hides the provided element so that it can stay in the dom without interrupting\n * @param {HTMLElement} dragTarget\n */\nexport function hideOriginalDragTarget(dragTarget) {\n    dragTarget.style.display = 'none';\n    dragTarget.style.position = 'fixed';\n    dragTarget.style.zIndex = '-5';\n}\n\n/**\n * styles the shadow element\n * @param {HTMLElement} shadowEl\n */\nexport function styleShadowEl(shadowEl) {\n    shadowEl.style.visibility = \"hidden\";\n}\n\n/**\n * will mark the given dropzones as visually active\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object (so the styles can be removed)\n */\nexport function styleActiveDropZones(dropZones, getStyles = () => {}) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz)\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = styles[style];\n        });\n    });\n}\n\n/**\n * will remove the 'active' styling from given dropzones\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object\n */\nexport function styleInactiveDropZones(dropZones, getStyles = () => {}) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz)\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = '';\n        });\n    });\n}\n","import { observe, unobserve } from './helpers/observer';\nimport { armWindowScroller, disarmWindowScroller} from \"./helpers/windowScroller\";\nimport {\n    createDraggedElementFrom,\n    moveDraggedElementToWasDroppedState,\n    morphDraggedElementToBeLike,\n    styleDraggable,\n    styleShadowEl,\n    styleActiveDropZones,\n    styleInactiveDropZones,\n    hideOriginalDragTarget\n} from \"./helpers/styler\";\nimport { DRAGGED_ENTERED_EVENT_NAME, DRAGGED_LEFT_EVENT_NAME, DRAGGED_LEFT_DOCUMENT_EVENT_NAME, DRAGGED_OVER_INDEX_EVENT_NAME, dispatchConsiderEvent, dispatchFinalizeEvent } from './helpers/dispatcher';\nimport {areObjectsShallowEqual, toString} from \"./helpers/util\";\n\nexport const SHADOW_ITEM_MARKER_PROPERTY_NAME = 'isDndShadowItem';\n\nconst DEFAULT_DROP_ZONE_TYPE = '--any--';\nconst MIN_OBSERVATION_INTERVAL_MS = 100;\nconst MIN_MOVEMENT_BEFORE_DRAG_START_PX = 3;\nconst DEFAULT_DROP_TARGET_STYLE = {\n    outline: 'rgba(255, 255, 102, 0.7) solid 2px',\n};\n\nlet originalDragTarget;\nlet draggedEl;\nlet draggedElData;\nlet draggedElType;\nlet originDropZone;\nlet originIndex;\nlet shadowElIdx;\nlet shadowElData;\nlet shadowElDropZone;\nlet dragStartMousePosition;\nlet currentMousePosition;\nlet isWorkingOnPreviousDrag = false;\nlet finalizingPreviousDrag = false;\n\n// a map from type to a set of drop-zones\nconst typeToDropZones = new Map();\n// important - this is needed because otherwise the config that would be used for everyone is the config of the element that created the event listeners\nconst dzToConfig = new Map();\n// this is needed in order to be able to cleanup old listeners and avoid stale closures issues (as the listener is defined within each zone)\nconst elToMouseDownListener = new WeakMap();\n\nlet ITEM_ID_KEY = \"id\";\n\n/**\n * Allows using another key instead of \"id\" in the items data. This is global and applies to all dndzones.\n * Has to be called when there are no rendered dndzones whatsoever.\n * @param {String} newKeyName\n * @throws {Error} if it was called when there are rendered dndzones or if it is given the wrong type (not a string)\n */\nexport function overrideItemIdKeyNameBeforeInitialisingDndZones(newKeyName) {\n    if (dzToConfig.size > 0) {\n        throw new Error(\"can only override the id key before initialising any dndzone\");\n    }\n    if (typeof newKeyName !== \"string\") {\n        throw new Error(\"item id key has to be a string\");\n    }\n    console.debug(\"overriding item id key name\", newKeyName)\n    ITEM_ID_KEY = newKeyName;\n}\n\n/* drop-zones registration management */\nfunction registerDropZone(dropZoneEl, type) {\n    console.debug('registering drop-zone if absent')\n    if (!typeToDropZones.has(type)) {\n        typeToDropZones.set(type, new Set());\n    }\n    if (!typeToDropZones.get(type).has(dropZoneEl)) {\n        typeToDropZones.get(type).add(dropZoneEl);\n    }\n}\nfunction unregisterDropZone(dropZoneEl, type) {\n    typeToDropZones.get(type).delete(dropZoneEl);\n    if (typeToDropZones.get(type).size === 0) {\n        typeToDropZones.delete(type);\n    }\n}\n\n/* functions to manage observing the dragged element and trigger custom drag-events */\nfunction watchDraggedElement() {\n    console.debug('watching dragged element');\n    armWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.addEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.addEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.addEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.addEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    // it is important that we don't have an interval that is faster than the flip duration because it can cause elements to jump bach and forth\n    const observationIntervalMs = Math.max(MIN_OBSERVATION_INTERVAL_MS, ...Array.from(dropZones.keys()).map(dz => dzToConfig.get(dz).dropAnimationDurationMs));\n    observe(draggedEl, dropZones, observationIntervalMs * 1.07);\n}\nfunction unWatchDraggedElement() {\n    console.debug('unwatching dragged element');\n    disarmWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.removeEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.removeEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.removeEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.removeEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    unobserve(draggedEl, dropZones);\n}\n\n/* custom drag-events handlers */\nfunction handleDraggedEntered(e) {\n    console.debug('dragged entered', e.currentTarget, e.detail);\n    let {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        console.debug('drop is currently disabled');\n        return;\n    }\n    // this deals with another svelte related race condition. in rare occasions (super rapid operations) the list hasn't updated yet\n    items = items.filter(i => i[ITEM_ID_KEY] !== shadowElData[ITEM_ID_KEY])\n    console.debug(`dragged entered items ${toString(items)}`);\n    const {index, isProximityBased} = e.detail.indexObj;\n    shadowElIdx = (isProximityBased && index === e.currentTarget.children.length - 1)? index + 1 : index;\n    shadowElDropZone = e.currentTarget;\n    items.splice( shadowElIdx, 0, shadowElData);\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_ENTERED, id: draggedElData[ITEM_ID_KEY]});\n}\nfunction handleDraggedLeft(e) {\n    console.debug('dragged left', e.currentTarget, e.detail);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        console.debug('drop is currently disabled');\n        return;\n    }\n    items.splice(shadowElIdx, 1);\n    shadowElIdx = undefined;\n    shadowElDropZone = undefined;\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_LEFT, id: draggedElData[ITEM_ID_KEY]});\n}\nfunction handleDraggedIsOverIndex(e) {\n    console.debug('dragged is over index', e.currentTarget, e.detail);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        console.debug('drop is currently disabled');\n        return;\n    }\n    const {index} = e.detail.indexObj;\n    items.splice(shadowElIdx, 1);\n    items.splice( index, 0, shadowElData);\n    shadowElIdx = index;\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_OVER_INDEX, id: draggedElData[ITEM_ID_KEY]});\n}\n\n/* global mouse/touch-events handlers */\nfunction handleMouseMove(e) {\n    e.preventDefault();\n    const c = e.touches? e.touches[0] : e;\n    currentMousePosition = {x: c.clientX, y: c.clientY};\n    draggedEl.style.transform = `translate3d(${currentMousePosition.x - dragStartMousePosition.x}px, ${currentMousePosition.y - dragStartMousePosition.y}px, 0)`;\n}\n\nfunction handleDrop() {\n    console.debug('dropped');\n    finalizingPreviousDrag = true;\n    // cleanup\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.removeEventListener('touchmove', handleMouseMove);\n    window.removeEventListener('mouseup', handleDrop);\n    window.removeEventListener('touchend', handleDrop);\n    unWatchDraggedElement();\n    moveDraggedElementToWasDroppedState(draggedEl);\n    if (!!shadowElDropZone) { // it was dropped in a drop-zone\n        console.debug('dropped in dz', shadowElDropZone);\n        let {items, type} = dzToConfig.get(shadowElDropZone);\n        styleInactiveDropZones(typeToDropZones.get(type), dz => dzToConfig.get(dz).dropTargetStyle);\n        items = items.map(item => item.hasOwnProperty(SHADOW_ITEM_MARKER_PROPERTY_NAME)? draggedElData : item);\n        function finalizeWithinZone() {\n            dispatchFinalizeEvent(shadowElDropZone, items, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: draggedElData[ITEM_ID_KEY]});\n            if (shadowElDropZone !== originDropZone) {\n                // letting the origin drop zone know the element was permanently taken away\n                dispatchFinalizeEvent(originDropZone, dzToConfig.get(originDropZone).items, {trigger: TRIGGERS.DROPPED_INTO_ANOTHER, id: draggedElData[ITEM_ID_KEY]});\n            }\n            shadowElDropZone.children[shadowElIdx].style.visibility = '';\n            cleanupPostDrop();\n        }\n        animateDraggedToFinalPosition(finalizeWithinZone);\n    }\n    else { // it needs to return to its place\n        console.debug('no dz available');\n        let {items, type} = dzToConfig.get(originDropZone);\n        styleInactiveDropZones(typeToDropZones.get(type), dz => dzToConfig.get(dz).dropTargetStyle);\n        items.splice(originIndex, 0, shadowElData);\n        shadowElDropZone = originDropZone;\n        shadowElIdx = originIndex;\n        dispatchConsiderEvent(originDropZone, items, {trigger: TRIGGERS.DROPPED_OUTSIDE_OF_ANY, id: draggedElData[ITEM_ID_KEY]});\n        function finalizeBackToOrigin() {\n            items.splice(originIndex, 1, draggedElData);\n            dispatchFinalizeEvent(originDropZone, items, {trigger: TRIGGERS.DROPPED_OUTSIDE_OF_ANY, id: draggedElData[ITEM_ID_KEY]});\n            shadowElDropZone.children[shadowElIdx].style.visibility = '';\n            cleanupPostDrop();\n        }\n        window.setTimeout(() => animateDraggedToFinalPosition(finalizeBackToOrigin), 0);\n    }\n}\n\n// helper function for handleDrop\nfunction animateDraggedToFinalPosition(callback) {\n    const shadowElRect = shadowElDropZone.children[shadowElIdx].getBoundingClientRect();\n    const newTransform = {\n        x: shadowElRect.left - parseFloat(draggedEl.style.left),\n        y: shadowElRect.top - parseFloat(draggedEl.style.top)\n    };\n    const {dropAnimationDurationMs} = dzToConfig.get(shadowElDropZone);\n    const transition = `transform ${dropAnimationDurationMs}ms ease`\n    draggedEl.style.transition = draggedEl.style.transition? draggedEl.style.transition + \",\" + transition : transition;\n    draggedEl.style.transform = `translate3d(${newTransform.x}px, ${newTransform.y}px, 0)`;\n    window.setTimeout(callback, dropAnimationDurationMs);\n}\n\n/* cleanup */\nfunction cleanupPostDrop() {\n    draggedEl.remove();\n    originalDragTarget.remove();\n    draggedEl = undefined;\n    originalDragTarget = undefined;\n    draggedElData = undefined;\n    draggedElType = undefined;\n    originDropZone = undefined;\n    originIndex = undefined;\n    shadowElData = undefined;\n    shadowElIdx = undefined;\n    shadowElDropZone = undefined;\n    dragStartMousePosition = undefined;\n    currentMousePosition = undefined;\n    isWorkingOnPreviousDrag = false;\n    finalizingPreviousDrag = false;\n}\n\n\nexport const TRIGGERS = {\n    DRAG_STARTED: \"dragStarted\",\n    DRAGGED_ENTERED: DRAGGED_ENTERED_EVENT_NAME,\n    DRAGGED_OVER_INDEX: DRAGGED_OVER_INDEX_EVENT_NAME,\n    DRAGGED_LEFT: DRAGGED_LEFT_EVENT_NAME,\n    DROPPED_INTO_ZONE: \"droppedIntoZone\",\n    DROPPED_INTO_ANOTHER: \"droppedIntoAnother\",\n    DROPPED_OUTSIDE_OF_ANY: \"droppedOutsideOfAny\"\n};\n/**\n * A Svelte custom action to turn any container to a dnd zone and all of its direct children to draggables\n * dispatches two events that the container is expected to react to by modifying its list of items,\n * which will then feed back in to this action via the update function\n *\n * @typedef {Object} Options\n * @property {Array} items - the list of items that was used to generate the children of the given node (the list used in the #each block\n * @property {string} [type] - the type of the dnd zone. children dragged from here can only be dropped in other zones of the same type, default to a base type\n * @property {number} [flipDurationMs] - if the list animated using flip (recommended), specifies the flip duration such that everything syncs with it without conflict, defaults to zero\n * @param {HTMLElement} node - the element to enhance\n * @param {Options} options\n * @return {{update: function, destroy: function}}\n */\nexport function dndzone(node, options) {\n    const config =  {\n        items: undefined,\n        type: DEFAULT_DROP_ZONE_TYPE,\n        flipDurationMs: 0,\n        dragDisabled: false,\n        dropFromOthersDisabled: false,\n        dropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\n        transformDraggedElement : () => {}\n    };\n    console.debug(`dndzone good to go options: ${toString(options)}, config: ${toString(config)}`, {node});\n    let elToIdx = new Map();\n\n    function addMaybeListeners() {\n        window.addEventListener('mousemove', handleMouseMoveMaybeDragStart, {passive: false});\n        window.addEventListener('touchmove', handleMouseMoveMaybeDragStart, {passive: false, capture: false});\n        window.addEventListener('mouseup', handleFalseAlarm, {passive: false});\n        window.addEventListener('touchend', handleFalseAlarm, {passive: false});\n    }\n    function removeMaybeListeners() {\n        window.removeEventListener('mousemove', handleMouseMoveMaybeDragStart);\n        window.removeEventListener('touchmove', handleMouseMoveMaybeDragStart);\n        window.removeEventListener('mouseup', handleFalseAlarm);\n        window.removeEventListener('touchend', handleFalseAlarm);\n    }\n    function handleFalseAlarm() {\n        removeMaybeListeners();\n        originalDragTarget = undefined;\n        dragStartMousePosition = undefined;\n        currentMousePosition = undefined;\n    }\n\n    function handleMouseMoveMaybeDragStart(e) {\n        e.preventDefault();\n        const c = e.touches? e.touches[0] : e;\n        currentMousePosition = {x: c.clientX, y: c.clientY};\n        if (Math.abs(currentMousePosition.x - dragStartMousePosition.x) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX || Math.abs(currentMousePosition.y - dragStartMousePosition.y) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX) {\n            removeMaybeListeners();\n            handleDragStart(originalDragTarget);\n        }\n    }\n    function handleMouseDown(e) {\n        // prevents responding to any button but left click which equals 0 (which is falsy)\n        if (e.button) {\n            console.debug(`ignoring none left click button: ${e.button}`);\n            return;\n        }\n        if (isWorkingOnPreviousDrag) {\n            console.debug('cannot start a new drag before finalizing previous one');\n            return;\n        }\n        e.stopPropagation();\n        const c = e.touches? e.touches[0] : e;\n        dragStartMousePosition = {x: c.clientX, y:c.clientY};\n        currentMousePosition = {...dragStartMousePosition};\n        originalDragTarget = e.currentTarget;\n        addMaybeListeners();\n    }\n\n    function handleDragStart() {\n        console.debug(`drag start config: ${toString(config)}`, originalDragTarget);\n        isWorkingOnPreviousDrag = true;\n\n        // initialising globals\n        const currentIdx = elToIdx.get(originalDragTarget);\n        originIndex = currentIdx;\n        originDropZone = originalDragTarget.parentElement;\n        const {items, type} = config;\n        draggedElData = {...items[currentIdx]};\n        draggedElType = type;\n        shadowElData = {...draggedElData, [SHADOW_ITEM_MARKER_PROPERTY_NAME]: true};\n\n        // creating the draggable element\n        draggedEl = createDraggedElementFrom(originalDragTarget);\n        // We will keep the original dom node in the dom because touch events keep firing on it, we want to re-add it after Svelte removes it\n        function keepOriginalElementInDom() {\n            const {items: itemsNow} = config;\n            if (!draggedEl.parentElement && (!itemsNow[originIndex] || draggedElData[ITEM_ID_KEY] !== itemsNow[originIndex][ITEM_ID_KEY])) {\n                document.body.appendChild(draggedEl);\n                watchDraggedElement();\n                hideOriginalDragTarget(originalDragTarget);\n                document.body.appendChild(originalDragTarget);\n            } else {\n                window.requestAnimationFrame(keepOriginalElementInDom);\n            }\n        }\n        window.requestAnimationFrame(keepOriginalElementInDom);\n\n        styleActiveDropZones(\n            Array.from(typeToDropZones.get(config.type))\n                .filter(dz => dz === originDropZone || !dzToConfig.get(dz).dropFromOthersDisabled),\n            dz => dzToConfig.get(dz).dropTargetStyle,\n        );\n\n        // removing the original element by removing its data entry\n        items.splice(currentIdx, 1);\n        dispatchConsiderEvent(originDropZone, items, {trigger: TRIGGERS.DRAG_STARTED, id: draggedElData[ITEM_ID_KEY]});\n\n        // handing over to global handlers - starting to watch the element\n        window.addEventListener('mousemove', handleMouseMove, {passive: false});\n        window.addEventListener('touchmove', handleMouseMove, {passive: false, capture: false});\n        window.addEventListener('mouseup', handleDrop, {passive: false});\n        window.addEventListener('touchend', handleDrop, {passive: false});\n    }\n\n    function configure({\n                           items = undefined,\n                           flipDurationMs:dropAnimationDurationMs = 0,\n                           type: newType = DEFAULT_DROP_ZONE_TYPE,\n                           dragDisabled = false,\n                           dropFromOthersDisabled = false,\n                           dropTargetStyle = DEFAULT_DROP_TARGET_STYLE,\n                           transformDraggedElement = () => {},\n                           ...rest\n                       }) {\n        if (Object.keys(rest).length > 0) {\n            console.warn(`dndzone will ignore unknown options`, rest);\n        }\n        if (!items) {\n            throw new Error(\"no 'items' key provided to dndzone\");\n        }\n        const itemWithMissingId = items.find(item => !item.hasOwnProperty(ITEM_ID_KEY));\n        if (itemWithMissingId) {\n            throw new Error(`missing '${ITEM_ID_KEY}' property for item ${toString(itemWithMissingId)}`);\n        }\n        config.dropAnimationDurationMs = dropAnimationDurationMs;\n        if (config.type && newType !== config.type) {\n            unregisterDropZone(node, config.type);\n        }\n        config.type = newType;\n        registerDropZone(node, newType);\n\n        config.items = [...items];\n        config.dragDisabled = dragDisabled;\n        config.transformDraggedElement = transformDraggedElement;\n\n        // realtime update for dropTargetStyle\n        if (isWorkingOnPreviousDrag && !finalizingPreviousDrag && !areObjectsShallowEqual(dropTargetStyle, config.dropTargetStyle)) {\n            styleInactiveDropZones([node], () => config.dropTargetStyle);\n            styleActiveDropZones([node], () => dropTargetStyle);\n        }\n        config.dropTargetStyle = dropTargetStyle;\n\n        // realtime update for dropFromOthersDisabled\n        if (isWorkingOnPreviousDrag && config.dropFromOthersDisabled !== dropFromOthersDisabled) {\n            if (dropFromOthersDisabled) {\n                styleInactiveDropZones([node], dz => dzToConfig.get(dz).dropTargetStyle);\n            } else {\n                styleActiveDropZones([node], dz => dzToConfig.get(dz).dropTargetStyle);\n            }\n        }\n        config.dropFromOthersDisabled = dropFromOthersDisabled;\n\n        dzToConfig.set(node, config);\n        for (let idx = 0; idx < node.children.length; idx++) {\n            const draggableEl = node.children[idx];\n            styleDraggable(draggableEl, dragDisabled);\n            if (config.items[idx].hasOwnProperty(SHADOW_ITEM_MARKER_PROPERTY_NAME)) {\n                morphDraggedElementToBeLike(draggedEl, draggableEl, currentMousePosition.x, currentMousePosition.y, () => config.transformDraggedElement(draggedEl, draggedElData, idx));\n                styleShadowEl(draggableEl);\n                continue;\n            }\n            draggableEl.removeEventListener('mousedown', elToMouseDownListener.get(draggableEl));\n            draggableEl.removeEventListener('touchstart', elToMouseDownListener.get(draggableEl));\n            if (!dragDisabled) {\n                draggableEl.addEventListener('mousedown', handleMouseDown);\n                draggableEl.addEventListener('touchstart', handleMouseDown);\n                elToMouseDownListener.set(draggableEl, handleMouseDown);\n            }\n            // updating the idx\n            elToIdx.set(draggableEl, idx);\n        }\n    }\n    configure(options);\n\n    return ({\n        update: (newOptions) => {\n            console.debug(`dndzone will update newOptions: ${toString(newOptions)}`);\n            configure(newOptions);\n        },\n        destroy: () => {\n            console.debug(\"dndzone will destroy\");\n            unregisterDropZone(node, config.type);\n            dzToConfig.delete(node);\n        }\n    });\n}\n","<script>\r\n  export let routine\r\n  export let editMode\r\n  export let onRemove\r\n  export let bgClass\r\n</script>\r\n\r\n<div class={'card mb-1 ' + bgClass}>\r\n  <div class=\"card-body \" style=\"font-size:20px\">\r\n    {routine.description}\r\n    {#if editMode}\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-sm ml-1\"\r\n        on:click={onRemove(routine.id)}>-</button>\r\n    {/if}\r\n  </div>\r\n</div>\r\n","<script>\n  import { onMount } from 'svelte'\n  import { v4 as uuid } from 'uuid'\n  import { dndzone } from 'svelte-dnd-action'\n\n  import Routine from './Routine.svelte'\n\n  const storageKey = 'routines'\n  let editMode = false\n  let editedRoutine = ''\n  let routines = []\n\n  const bgClasses = [\n    // 'bg-info',\n    // 'bg-dark',\n    // 'bg-success',\n    // 'bg-primary',\n    // 'bg-secondary',\n    // 'bg-warning',\n    'color-1',\n    'color-6',\n    'color-3',\n    'color-4',\n    'color-2',\n    'color-5'\n  ]\n\n  const updated = () => {\n    localStorage.setItem(storageKey, JSON.stringify(routines, null, 2))\n  }\n\n  const handleSort = (e) => {\n    routines = e.detail.items\n    updated()\n  }\n\n  const onAdd = () => {\n    if (editedRoutine.length > 0) {\n      routines = routines.concat({\n        description: editedRoutine,\n        id: uuid()\n      })\n      editedRoutine = ''\n      editMode = false\n    }\n    updated()\n  }\n\n  const onEdit = () => {\n    editMode = !editMode\n  }\n\n  const onRemove = (id) => {\n    routines = routines.filter((li) => li.id !== id)\n    updated()\n  }\n\n  onMount(() => {\n    const initial = [\n      { description: 'eat', id: uuid() },\n      { description: 'sleep', id: uuid() }\n    ]\n\n    if (localStorage.getItem(storageKey) === null) {\n      localStorage.setItem(storageKey, JSON.stringify(initial, null, 2))\n    }\n    routines = JSON.parse(localStorage.getItem(storageKey))\n  })\n</script>\n\n<svelte:head>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" />\n</svelte:head>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1 class=\"text-white\">routines</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      {#if editMode}\n        <section\n          use:dndzone={{ items: routines }}\n          on:consider={handleSort}\n          on:finalize={handleSort}>\n          {#each routines as routine, index (routine.id)}\n            <Routine\n              {editMode}\n              {routine}\n              {onRemove}\n              bgClass={bgClasses[index % bgClasses.length]} />\n          {/each}\n        </section>\n      {:else}\n        {#each routines as routine, index (routine.id)}\n          <Routine\n            {editMode}\n            {routine}\n            {onRemove}\n            bgClass={bgClasses[index % bgClasses.length]} />\n        {/each}\n      {/if}\n    </div>\n  </div>\n  {#if editMode}\n    <div class=\"row my-1\">\n      <div class=\"col-8 col-sm-10 col-md-10 col-lg-10 col-xl-11\">\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          placeholder=\"Routine description\"\n          bind:value={editedRoutine} />\n      </div>\n      <div class=\"col\">\n        <button\n          type=\"button\"\n          class=\"btn btn-success\"\n          on:click={onAdd}>add</button>\n      </div>\n    </div>\n  {/if}\n  <div class=\"row\">\n    <div class=\"col\">\n      <button\n        type=\"button\"\n        class=\"btn btn-warning\"\n        on:click={onEdit}>edit</button>\n    </div>\n  </div>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n  props: {}\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","validate","uuid","REGEX","test","byteToHex","toString","substr","v4","buf","offset","rnds","random","arr","arguments","undefined","toLowerCase","TypeError","stringify","getAbsoluteRect","el","rect","getBoundingClientRect","top","window","scrollY","bottom","left","scrollX","right","isPointInsideRect","point","y","x","findCenterOfElement","isCenterOfAInsideB","elA","elB","calcDistanceBetweenCenters","centerOfA","centerOfB","pointA","pointB","sqrt","pow","findWouldBeIndex","floatingAboveEl","collectionBelowEl","isProximityBased","minDistanceSoFar","Number","MAX_VALUE","indexOfMin","distance","dispatchFinalizeEvent","items","info","dispatchEvent","CustomEvent","detail","dispatchConsiderEvent","DRAGGED_ENTERED_EVENT_NAME","DRAGGED_LEFT_EVENT_NAME","DRAGGED_OVER_INDEX_EVENT_NAME","DRAGGED_LEFT_DOCUMENT_EVENT_NAME","dispatchDraggedElementEnteredContainer","containerEl","indexObj","draggedEl","dispatchDraggedElementLeftContainer","dispatchDraggedElementIsOverIndex","makeScroller","scrollingInfo","resetScrolling","directionObj","stepPx","scrollContainer","scrollBy","requestAnimationFrame","calcScrollStepPx","distancePx","scrollIfNeeded","pointer","elementToScroll","distances","min","documentElement","clientWidth","calcInnerDistancesBetweenPointAndSidesOfElement","isAlreadyScrolling","scrollingVertically","scrollingHorizontally","scrollHeight","clientHeight","scrollWidth","object","JSON","getDepth","_getDepth","countSoFar","parentElement","observe","dropZones","intervalMs","lastDropZoneFound","lastIndexFound","lastCentrePositionOfDragged","lastIsDraggedInADropZone","dropZonesFromDeepToShallow","sort","dz1","dz2","andNow","currentCenterOfDragged","setTimeout","isElementOffDocument","console","debug","dispatchDraggedLeftDocument","isDraggedInADropZone","dz","mousePosition","updateMousePosition","e","touches","clientX","clientY","loop","trs","property","morphDraggedElementToBeLike","copyFromEl","currentMouseX","currentMouseY","transformDraggedElement","newRect","draggedElRect","widthChange","width","heightChange","height","relativeDistanceOfMousePointerFromDraggedSides","style","parseFloat","copyStylesFromTo","copyToEl","computedStyle","getComputedStyle","s","startsWith","setProperty","getPropertyValue","getPropertyPriority","styleDraggable","draggableEl","dragDisabled","draggable","ondragstart","userSelect","cursor","styleActiveDropZones","getStyles","styles","styleInactiveDropZones","SHADOW_ITEM_MARKER_PROPERTY_NAME","DEFAULT_DROP_ZONE_TYPE","DEFAULT_DROP_TARGET_STYLE","outline","originalDragTarget","draggedElData","draggedElType","originDropZone","originIndex","shadowElIdx","shadowElData","shadowElDropZone","dragStartMousePosition","currentMousePosition","isWorkingOnPreviousDrag","finalizingPreviousDrag","typeToDropZones","dzToConfig","elToMouseDownListener","WeakMap","ITEM_ID_KEY","unregisterDropZone","dropZoneEl","size","watchDraggedElement","handleDraggedEntered","handleDraggedLeft","handleDraggedIsOverIndex","handleDrop","observationIntervalMs","max","dropAnimationDurationMs","unWatchDraggedElement","clearTimeout","currentTarget","dropFromOthersDisabled","trigger","TRIGGERS","DRAGGED_ENTERED","id","DRAGGED_LEFT","DRAGGED_OVER_INDEX","handleMouseMove","preventDefault","transform","moveDraggedElementToWasDroppedState","dropTargetStyle","item","hasOwnProperty","animateDraggedToFinalPosition","DROPPED_INTO_ZONE","DROPPED_INTO_ANOTHER","visibility","cleanupPostDrop","finalizeBackToOrigin","DROPPED_OUTSIDE_OF_ANY","shadowElRect","newTransform","transition","remove","DRAG_STARTED","dndzone","config","flipDurationMs","elToIdx","removeMaybeListeners","handleMouseMoveMaybeDragStart","handleFalseAlarm","currentIdx","keepOriginalElementInDom","itemsNow","dragTarget","body","display","position","zIndex","originalElement","cloneNode","margin","boxSizing","createDraggedElementFrom","passive","capture","handleDragStart","handleMouseDown","button","stopPropagation","configure","newType","warn","itemWithMissingId","find","objA","objB","keyA","areObjectsShallowEqual","idx","newOptions","description","important","wholeText","routine","editMode","onRemove","bgClass","action_result","storageKey","editedRoutine","routines","updated","localStorage","setItem","initial","getItem","parse","concat","li"],"mappings":"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"}